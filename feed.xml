<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://taeho-jo.github.io/</id><title>Jotang</title><subtitle>Jotang's Tech Blog React, React Native, FrontEnd Developer</subtitle> <updated>2021-12-09T17:42:35+09:00</updated> <author> <name>Jotang</name> <uri>https://taeho-jo.github.io/</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="https://taeho-jo.github.io/" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Jotang </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>[Error] Naver MMS 이미지 전송하기</title><link href="https://taeho-jo.github.io//posts/naverSmsError/" rel="alternate" type="text/html" title="[Error] Naver MMS 이미지 전송하기" /><published>2021-12-09T17:00:00+09:00</published> <updated>2021-12-09T17:42:13+09:00</updated> <id>https://taeho-jo.github.io//posts/naverSmsError/</id> <content src="https://taeho-jo.github.io//posts/naverSmsError/" /> <author> <name>Jotang</name> </author> <category term="Error" /> <summary> 프로젝트 중 Naver SMS API를 이용하여, 문자메세지를 보내야 하는 기능을 구현하는 중에 만났던 error를 기록하려고 한다. 아래 링크를 클릭하면 NAVER SMS API를 확인할 수 있다. NAVER SMS API { "type":"(SMS | LMS | MMS)", "contentType":"(COMM | AD)", "countryCode":"string", "from":"string", "subject":"string", "content":"string", "messages":[ { "to":"string" } ], "files":[ { ... </summary> </entry> <entry><title>JS fill() 메서드 사용해보기</title><link href="https://taeho-jo.github.io//posts/fill/" rel="alternate" type="text/html" title="JS fill() 메서드 사용해보기" /><published>2021-02-01T17:00:00+09:00</published> <updated>2021-02-01T17:00:00+09:00</updated> <id>https://taeho-jo.github.io//posts/fill/</id> <content src="https://taeho-jo.github.io//posts/fill/" /> <author> <name>Jotang</name> </author> <category term="JavaScript" /> <summary> 금일 코딩을 하는 와중에, 배열 사이에 있는 값들을 알아야하는 경우가 발생했습니다. 예를 들어 const arr = [5, 7] 5와 7을 가지고 있는 배열이 있다면, 5와 7 사이의 값인 6을 알아하는 경우였습니다. 처음에는 단순히 for문을 이용해서 값을 가져와보았습니다. const newArr = [] const getNumArr = ([start, end]) =&amp;gt; { for(let i = start; i &amp;lt; end + 1; i++) { newArr.push(i) } } getNumArr([5, 7]) // [5, 6, 7] for문도 나쁘지 않아 보였지만, 조금 다른 방법은 없을까하고, 이전 직장에서 동료와 사수님이 있는 슬랙에 올려보았고, 역시 다른 방법이... </summary> </entry> <entry><title>Github Blog 구글 검색 노출 시키기</title><link href="https://taeho-jo.github.io//posts/googleseo/" rel="alternate" type="text/html" title="Github Blog 구글 검색 노출 시키기" /><published>2021-01-21T01:12:00+09:00</published> <updated>2021-01-21T01:12:00+09:00</updated> <id>https://taeho-jo.github.io//posts/googleseo/</id> <content src="https://taeho-jo.github.io//posts/googleseo/" /> <author> <name>Jotang</name> </author> <category term="SEO" /> <summary> 블로그를 옮기기도 했고, Github blog를 구글에서 검색이 되게 하고싶었습니다. 이전까지는 제 블로그의 주소를 모르는 사람은 아예 올 수 없었지만, 왠지 구글에서도 저의 블로그가 검색이 잘 되기를 기대하면서, 시작해보겠습니다. 검색 엔진 최적화(SEO, Search Engine Optimization) SEO - MDN 용어사전 SEO를 검색을 하면, MDN에 SEO에 대해서 아주 간단 명료하게 설명이 잘 되어 있습니다. 쉽고 간단하게 설명을 하자면, 웹사이트의 검색 결과에 더 잘 보이도록 최적화 시켜주는 것 이라고 할 수 있겠습니다. 저는 가장 많은 검색을 하고 있는 구글에 최적화를 진행하보려고합니다. Google Search Console 등록 Google Search Console... </summary> </entry> <entry><title>useMemo &amp; useCallback</title><link href="https://taeho-jo.github.io//posts/useMemouseCallback/" rel="alternate" type="text/html" title="useMemo &amp; useCallback" /><published>2021-01-19T03:18:00+09:00</published> <updated>2021-01-19T04:27:35+09:00</updated> <id>https://taeho-jo.github.io//posts/useMemouseCallback/</id> <content src="https://taeho-jo.github.io//posts/useMemouseCallback/" /> <author> <name>Jotang</name> </author> <category term="React" /> <summary> 요즘 리액트로 코딩을 하면서, useCallback은 자주 사용하고, useMemo는 거의 사용하지 않고 있습니다. 사실 둘의 차이를 누가 설명하라고 하면, 정확히 할 자신이 없습니다. 지금 이 글을 작성하는 순간에도 과연 내가 이해하고 받아드린 것이 맞는지, 어떻게 사용하는 것이 좋을지에 대한 고민이 항상 함께 하고 있습니다. 그래도 제가 생각하고 이해한 useMemo와 useCallback에 대해서 글을 적어보려고 합니다. 읽게 되실 누군가에게 도움이 된다면, 너무 기쁠 것이고, 누군가 읽고 제가 이해를 잘못했거나, 다르게 알고 있는 부분을 알려주신다고 하여도 너무 기쁠 것 같습니다. 먼저 메모이제이션 훅이라는 아주 어려운 용어로써, 그 안에 useMemo와 useCallback이 있습니다. ... </summary> </entry> <entry><title>git 저장소 history 삭제 및 초기화</title><link href="https://taeho-jo.github.io//posts/git/" rel="alternate" type="text/html" title="git 저장소 history 삭제 및 초기화" /><published>2021-01-18T18:30:00+09:00</published> <updated>2021-01-18T18:36:50+09:00</updated> <id>https://taeho-jo.github.io//posts/git/</id> <content src="https://taeho-jo.github.io//posts/git/" /> <author> <name>Jotang</name> </author> <category term="Git" /> <summary> 블로그를 새로 옮기면서, 지금 사용하고 있는 jeklly 테마의 기존 repo를 fork해서 사용을 시작했습니다. 뭐 아직 많은 글을 올린 것은 아니지만, 올리는 와중에 보니 github의 잔디가 안 쌓이고 있었습니다. 물론 잔디에 집착하면 안되겠지만…그래도 괜히 신경이 쓰이니깐…잔디를 심고싶은데.. 왜 인지 검색을 조금 해보면서, 보았던 것들을 정리하려고 글을 쓰게 되었습니다.. 먼저, 한 것은 사용자 정보를 확인이였습니다.. $ git config --list 회사 컴퓨터였다 보니, 회사 이메일 계정이 등록되어있었고, 이름 역시 본래 나의 계정과는 달라서 변경을 시도 했습니다. $ git config user.name "[이름]" $ git config user.email [이메일] 변... </summary> </entry> </feed>
